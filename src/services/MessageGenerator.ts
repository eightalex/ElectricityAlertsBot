import {STRING} from '../constants/string';
import {TimeDifferenceGeneratorInterface} from './TimeDifferenceGenerator';

type GenerateArgumentsType = {
    isAvailable: boolean
    lastTime: string
    nowDate: Date
}

export interface MessageGeneratorInterface {
    generate(options: GenerateArgumentsType): string
}

export class MessageGenerator implements MessageGeneratorInterface {
    constructor(
        private timeDifferenceGenerator: TimeDifferenceGeneratorInterface,
    ) {}

    generate({isAvailable, lastTime, nowDate}: GenerateArgumentsType): string {
        const message = isAvailable ? 'üü¢ –ó\'—è–≤–∏–ª–æ—Å—å —Å–≤—ñ—Ç–ª–æ' : '‚ö´Ô∏è –ó–Ω–∏–∫–ª–æ —Å–≤—ñ—Ç–ª–æ';

        if (lastTime === '0') {
            return message;
        }

        if (isAvailable) {
            return [
                message,
                STRING.PARAGRAPH,
                '–í—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç—Ä–∏–≤–∞–ª–æ',
                STRING.NEWLINE,
                this.timeDifferenceGenerator.generate(lastTime, nowDate),
            ].join(STRING.EMPTY);
        }

        return [
            message,
            STRING.PARAGRAPH,
            '–ï–ª–µ–∫—Ç—Ä–æ–ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –±—É–ª–æ –Ω–∞—è–≤–Ω–µ',
            STRING.NEWLINE,
            this.timeDifferenceGenerator.generate(lastTime, nowDate),
        ].join(STRING.EMPTY);
    }
}
